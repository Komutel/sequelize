{
  "version": 3,
  "sources": ["../../../src/dialects/ibmi/index.js"],
  "sourcesContent": ["'use strict';\r\n\r\nimport { createUnspecifiedOrderedBindCollector } from '../../utils/sql';\r\n\r\nconst _ = require('lodash');\r\nconst { AbstractDialect } = require('../abstract');\r\nconst { IBMiConnectionManager } = require('./connection-manager');\r\nconst { IBMiQuery } = require('./query');\r\nconst { IBMiQueryGenerator } = require('./query-generator');\r\nconst { IBMiQueryInterface } = require('./query-interface');\r\nconst DataTypes = require('../../data-types').ibmi;\r\n\r\nexport class IBMiDialect extends AbstractDialect {\r\n\r\n  static supports = _.merge(\r\n    _.cloneDeep(AbstractDialect.supports),\r\n    {\r\n      'VALUES ()': true,\r\n      'ON DUPLICATE KEY': false,\r\n      transactions: false,\r\n\r\n      bulkDefault: true,\r\n      index: {\r\n        using: false,\r\n        where: true,\r\n        functionBased: true,\r\n        collate: false,\r\n      },\r\n      constraints: {\r\n        onUpdate: false,\r\n      },\r\n      groupedLimit: false,\r\n      JSON: false,\r\n      upserts: false,\r\n      schemas: true,\r\n    },\r\n  );\r\n\r\n  constructor(sequelize) {\r\n    super();\r\n    this.sequelize = sequelize;\r\n    this.connectionManager = new IBMiConnectionManager(this, sequelize);\r\n    this.queryGenerator = new IBMiQueryGenerator({\r\n      _dialect: this,\r\n      sequelize,\r\n    });\r\n    this.queryInterface = new IBMiQueryInterface(this.sequelize, this.queryGenerator);\r\n  }\r\n\r\n  createBindCollector() {\r\n    return createUnspecifiedOrderedBindCollector();\r\n  }\r\n\r\n  static getDefaultPort() {\r\n    return 25_000;\r\n  }\r\n}\r\n\r\nIBMiDialect.prototype.defaultVersion = '7.3.0';\r\nIBMiDialect.prototype.Query = IBMiQuery;\r\nIBMiDialect.prototype.DataTypes = DataTypes;\r\nIBMiDialect.prototype.name = 'ibmi';\r\nIBMiDialect.prototype.TICK_CHAR = '\"';\r\nIBMiDialect.prototype.TICK_CHAR_LEFT = IBMiDialect.prototype.TICK_CHAR;\r\nIBMiDialect.prototype.TICK_CHAR_RIGHT = IBMiDialect.prototype.TICK_CHAR;\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,iBAAsD;AAEtD,MAAM,IAAI,QAAQ,QAAQ;AAC1B,MAAM,EAAE,gBAAgB,IAAI,QAAQ,aAAa;AACjD,MAAM,EAAE,sBAAsB,IAAI,QAAQ,sBAAsB;AAChE,MAAM,EAAE,UAAU,IAAI,QAAQ,SAAS;AACvC,MAAM,EAAE,mBAAmB,IAAI,QAAQ,mBAAmB;AAC1D,MAAM,EAAE,mBAAmB,IAAI,QAAQ,mBAAmB;AAC1D,MAAM,YAAY,QAAQ,kBAAkB,EAAE;AAEvC,MAAM,oBAAoB,gBAAgB;AAAA,EAE/C,OAAO,WAAW,EAAE;AAAA,IAClB,EAAE,UAAU,gBAAgB,QAAQ;AAAA,IACpC;AAAA,MACE,aAAa;AAAA,MACb,oBAAoB;AAAA,MACpB,cAAc;AAAA,MAEd,aAAa;AAAA,MACb,OAAO;AAAA,QACL,OAAO;AAAA,QACP,OAAO;AAAA,QACP,eAAe;AAAA,QACf,SAAS;AAAA,MACX;AAAA,MACA,aAAa;AAAA,QACX,UAAU;AAAA,MACZ;AAAA,MACA,cAAc;AAAA,MACd,MAAM;AAAA,MACN,SAAS;AAAA,MACT,SAAS;AAAA,IACX;AAAA,EACF;AAAA,EAEA,YAAY,WAAW;AACrB,UAAM;AACN,SAAK,YAAY;AACjB,SAAK,oBAAoB,IAAI,sBAAsB,MAAM,SAAS;AAClE,SAAK,iBAAiB,IAAI,mBAAmB;AAAA,MAC3C,UAAU;AAAA,MACV;AAAA,IACF,CAAC;AACD,SAAK,iBAAiB,IAAI,mBAAmB,KAAK,WAAW,KAAK,cAAc;AAAA,EAClF;AAAA,EAEA,sBAAsB;AACpB,eAAO,kDAAsC;AAAA,EAC/C;AAAA,EAEA,OAAO,iBAAiB;AACtB,WAAO;AAAA,EACT;AACF;AAEA,YAAY,UAAU,iBAAiB;AACvC,YAAY,UAAU,QAAQ;AAC9B,YAAY,UAAU,YAAY;AAClC,YAAY,UAAU,OAAO;AAC7B,YAAY,UAAU,YAAY;AAClC,YAAY,UAAU,iBAAiB,YAAY,UAAU;AAC7D,YAAY,UAAU,kBAAkB,YAAY,UAAU;",
  "names": []
}
